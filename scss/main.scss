@import "mixins.scss";

$collapse-width: 1160px;
$sidebar-collapse: 800px;

html, body {
  @include full;
  @include fit;
}

body {
  position: relative;

  display: flex;
  flex-direction: column;

  font-family: $body-font;
  font-size: $font-size;

  background: $main-bg;

  overflow: hidden;

  // For just body content (not header etc.)
  #content main {
    // Some basic spacing
    padding: 2rem 0;

    // Prevents padding from expanding size
    box-sizing: border-box;

    // First screen (main content) should at _least_ be 100% always
    min-height: 100%;
  }

  #content, > header {
    // The wrappers will be fill width
    width: 100%;
  }

  // Primary content
  .content {
    // Centers content
    margin: 0 auto;

    // For any case where 100% manual alignment is chosen
    &.override {
      margin: auto;
      width: auto;
      padding: auto;
    }

    // Readjusts for smaller screens (removes margins)
    @media screen and (max-width: $collapse-width) {
      width: 100%;

      &.content-split.cs-collapse {
        width: 100%;
        margin-left: 0;
      }
    }

    // Split for RHS.
    &.content-split {
      margin: 0; // No margin as we already calculate that later

      display: flex;
      flex-direction: row;

      > main {
        align-self: stretch;

        width: 0px; // Prevents expansion of parent
        flex: 1;

        > form {
          // at least full width.
          min-height: 100%;

          display: flex;
          flex-direction: column;
        }
      }

      > aside {
        @import "page/sidebar.scss";
      }

      $sidebar-bonus: 8%;
      $content-space: (100% - $page-width) / 2;
      $content-width: 100% - $content-space;
      width: $content-width;
      margin-left: $content-space;
      $sidebar-width: ($content-space / $content-width) * 100% + $sidebar-bonus;

      // We don't want footer floating with background below.
      min-height: 100%;

      aside {
        @media screen and (max-width: $sidebar-collapse) {
          display: none;
        }

        width: $sidebar-width;
      }

      // .fixed-aside {
      //   position: absolute;
      //   width: ($sidebar-width / 100%) * $content-width;
      // }
    }

    // Width of main content
    width: $page-width;
  }
}

#ns-main {
  padding: 0.5em 0;
  color: white;
  text-align: center;
  font-weight: bold;
  font-family: $bold-font;
  font-size: 1.2em;
  background: #C22;
}

.template {
  display: none !important;
}

@import "theme/theme.scss";

@import "header/header.scss";
@import "listing/listing.scss";
@import "select-dialog.scss";
@import "page/profile/profile.scss";
@import "content.scss";
@import "buttons.scss";
@import "comment.scss";
@import "userbox.scss";
@import "leaderboard.scss";
@import "answer/write.scss";
@import "answer/view.scss";
@import "footer/footer.scss";
@import "vote.scss";
@import "user-popup.scss";
@import "page/posts.scss";
@import "page/user/user.scss";
@import "page/user/banner.scss";
@import "page/StackExchangeImport.scss";
@import "tio.scss";
@import "action.scss";
@import "markdown.scss";
@import "nodes.scss";
@import "modal.scss";
@import "auth.scss";
@import "pagination.scss";
@import "form.scss";
@import "lang.scss";
@import "upgrade-browser.scss";
@import "popover.scss";
@import "template-animations.scss";
@import "post-details.scss";
@import "import-indicator.scss";
@import "help-topics.scss";
@import "privacy.scss";
@import "header/help-header.scss";
@import "swipe-menu.scss";
